# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: notes.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='notes.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0bnotes.proto\"\x07\n\x05\x45mpty\"2\n\x04Note\x12\n\n\x02id\x18\x01 \x01(\t\x12\r\n\x05title\x18\x02 \x01(\t\x12\x0f\n\x07\x63ontent\x18\x03 \x01(\t\" \n\x08NoteList\x12\x14\n\x05notes\x18\x01 \x03(\x0b\x32\x05.Note\"\x1b\n\rNoteRequestId\x12\n\n\x02id\x18\x01 \x01(\t2g\n\x0bNoteService\x12\x1b\n\x04list\x12\x06.Empty\x1a\t.NoteList\"\x00\x12\x18\n\x06insert\x12\x05.Note\x1a\x05.Note\"\x00\x12!\n\x06\x64\x65lete\x12\x0e.NoteRequestId\x1a\x05.Note\"\x00\x62\x06proto3')
)




_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15,
  serialized_end=22,
)


_NOTE = _descriptor.Descriptor(
  name='Note',
  full_name='Note',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='Note.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='title', full_name='Note.title', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='content', full_name='Note.content', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24,
  serialized_end=74,
)


_NOTELIST = _descriptor.Descriptor(
  name='NoteList',
  full_name='NoteList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='notes', full_name='NoteList.notes', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=76,
  serialized_end=108,
)


_NOTEREQUESTID = _descriptor.Descriptor(
  name='NoteRequestId',
  full_name='NoteRequestId',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='NoteRequestId.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=110,
  serialized_end=137,
)

_NOTELIST.fields_by_name['notes'].message_type = _NOTE
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['Note'] = _NOTE
DESCRIPTOR.message_types_by_name['NoteList'] = _NOTELIST
DESCRIPTOR.message_types_by_name['NoteRequestId'] = _NOTEREQUESTID
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'notes_pb2'
  # @@protoc_insertion_point(class_scope:Empty)
  ))
_sym_db.RegisterMessage(Empty)

Note = _reflection.GeneratedProtocolMessageType('Note', (_message.Message,), dict(
  DESCRIPTOR = _NOTE,
  __module__ = 'notes_pb2'
  # @@protoc_insertion_point(class_scope:Note)
  ))
_sym_db.RegisterMessage(Note)

NoteList = _reflection.GeneratedProtocolMessageType('NoteList', (_message.Message,), dict(
  DESCRIPTOR = _NOTELIST,
  __module__ = 'notes_pb2'
  # @@protoc_insertion_point(class_scope:NoteList)
  ))
_sym_db.RegisterMessage(NoteList)

NoteRequestId = _reflection.GeneratedProtocolMessageType('NoteRequestId', (_message.Message,), dict(
  DESCRIPTOR = _NOTEREQUESTID,
  __module__ = 'notes_pb2'
  # @@protoc_insertion_point(class_scope:NoteRequestId)
  ))
_sym_db.RegisterMessage(NoteRequestId)



_NOTESERVICE = _descriptor.ServiceDescriptor(
  name='NoteService',
  full_name='NoteService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=139,
  serialized_end=242,
  methods=[
  _descriptor.MethodDescriptor(
    name='list',
    full_name='NoteService.list',
    index=0,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_NOTELIST,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='insert',
    full_name='NoteService.insert',
    index=1,
    containing_service=None,
    input_type=_NOTE,
    output_type=_NOTE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='delete',
    full_name='NoteService.delete',
    index=2,
    containing_service=None,
    input_type=_NOTEREQUESTID,
    output_type=_NOTE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_NOTESERVICE)

DESCRIPTOR.services_by_name['NoteService'] = _NOTESERVICE

# @@protoc_insertion_point(module_scope)
